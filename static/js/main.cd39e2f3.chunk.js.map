{"version":3,"sources":["components/Navbar.js","components/Form.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","Textform","text","setText","useState","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","handleUpClick","newText","toUpperCase","showAlert","handleLoClick","toLowerCase","handleClearClick","handleCopy","document","getElementById","select","navigator","clipboard","writeText","handleExtraSpaces","split","join","length","Alert","alert","msg","App","setMode","setAlert","message","setTimeout","about","body","TextForm","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.cd39e2f3.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n    <a className=\"navbar-brand\" href=\"# \">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link\" to=\"/about\">{props.about}</Link> */}\r\n          {/* <a className=\"nav-link\" href=\"/about\">{props.about}</a> */}\r\n        </li>\r\n        \r\n      </ul>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-info\" type=\"submit\">Search</button>\r\n      </form> */}\r\n\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n       </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {title:PropTypes.string,\r\n                    about:PropTypes.string}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function Textform(props) {\r\n\r\n  const handleUpClick = () =>{\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText)\r\n    props.showAlert(\"Converted to uppercase!\" , \"success\");\r\n  }\r\n\r\n  const handleLoClick = () =>{\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText)\r\n    props.showAlert(\"Converted to lowercase!\" , \"success\");\r\n  }\r\n\r\n  const handleClearClick = () =>{\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let newText = '';\r\n    setText(newText)\r\n    props.showAlert(\"Cleared the text!\" , \"success\");\r\n  }\r\n\r\n  const handleCopy = () =>{\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied the text!\" , \"success\");\r\n  }\r\n\r\n  const handleExtraSpaces = () =>{\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\"Removed extra spaces!\" , \"success\");\r\n  }\r\n\r\n  const handleOnChange = (event) =>{\r\n    console.log(\"On change\");\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const [text, setText] = useState('')\r\n\r\n  return (\r\n    <>\r\n    <div className='container' style={{color: props.mode==='dark'?'white':'black'}}>\r\n    <h1>{props.heading}</h1>\r\n    <div className=\"mb-3\">\r\n      <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'black'}} id=\"myBox\"  rows=\"10\" ></textarea>\r\n    </div>\r\n    <button className='btn btn-primary mx-1 my-1' onClick={handleUpClick}>Convert to Uppercase</button>\r\n    <button className='btn btn-primary mx-1 my-1' onClick={handleLoClick}>Convert to Lowercase</button>\r\n    <button className='btn btn-primary mx-1 my-1' onClick={handleClearClick}>Clear Text</button>\r\n    <button className='btn btn-primary mx-1 my-1' onClick={handleCopy}>Copy Text</button>\r\n    <button className='btn btn-primary mx-1 my-1' onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n    </div>\r\n\r\n    <div className=\"container my-4\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n      <h2>Your text summary</h2>\r\n      <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n      <p>{0.008 * text.split(\" \").length} Minutes</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Enter something above to preview it here\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react' \r\n\r\nfunction Alert(props) {\r\n//   const capitalize = (word) =>{\r\n//     const lower = word.toLowerCase();\r\n//     return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n//   }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`}  role=\"alert\">\r\n        <strong>{props.alert.type}</strong> : {props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/Form';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import About from './components/About';\n// import { BrowserRouter as Router, Routes,Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert , setAlert] = useState(null);\n\n  const showAlert = (message , type) =>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#001133';\n      showAlert(\"Dark mode has been enabled\" , \"success\");\n      document.title = \"Textme - DarkMode\";\n      // setInterval(() => {\n      //   document.title = 'Textutils is Amazing!!';\n      // }, 1500);\n      // setInterval(() => {\n      //   document.title = 'Install Textutils Noww!!';\n      // }, 2500);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\" , \"success\");\n      document.title = \"Textme - LightMode\";\n    }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"Textme\" about=\"About us\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className='container my-3'>\n      {/* <Routes>\n          <Route path=\"/about\" element={<About />}></Route>\n          \n          <Route path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter your text to analyze\" mode={mode}/>}></Route> */}\n          <TextForm showAlert={showAlert} heading=\"Enter your text to analyze\" mode={mode}/>\n          \n             \n        {/* { </Routes>} */}\n        \n      {/* </Router> */}\n      </div>\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}