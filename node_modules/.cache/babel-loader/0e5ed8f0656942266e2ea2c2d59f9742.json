{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT APPS\\\\practice\\\\src\\\\App.js\";\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/Form';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const removeBodyClasses = () => {\n    // document.body.classList.remove('bg-black')\n    // document.body.classList.remove('bg-light')\n    document.body.classList.remove('bg-success');\n    document.body.classList.remove('bg-warning');\n    document.body.classList.remove('bg-danger');\n    document.body.classList.remove('bg-primary');\n  };\n  const toggleMode = cls => {\n    removeBodyClasses();\n    console.log(cls);\n    document.body.classList.add('bg-' + cls);\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#001133';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"Textme - DarkMode\";\n      // setInterval(() => {\n      //   document.title = 'Textutils is Amazing!!';\n      // }, 1500);\n      // setInterval(() => {\n      //   document.title = 'Install Textutils Noww!!';\n      // }, 2500);\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = \"Textme - LightMode\";\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    title: \"Textme\",\n    about: \"About us\",\n    mode: mode,\n    toggleMode: toggleMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Alert, {\n    alert: alert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/about\",\n    element: /*#__PURE__*/React.createElement(About, {\n      mode: mode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 41\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/React.createElement(TextForm, {\n      showAlert: showAlert,\n      heading: \"Try TextUtils - word counter, character counter, remove extra\",\n      mode: mode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 36\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  })))));\n}\nexport default App;","map":{"version":3,"names":["Navbar","TextForm","React","useState","Alert","About","BrowserRouter","Router","Routes","Route","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","removeBodyClasses","document","body","classList","remove","toggleMode","cls","console","log","add","style","backgroundColor","title","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","about","className","path","element","heading"],"sources":["D:/REACT APPS/practice/src/App.js"],"sourcesContent":["import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/Form';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport { BrowserRouter as Router, Routes,Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert , setAlert] = useState(null);\n\n  const showAlert = (message , type) =>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const removeBodyClasses = () =>{\n    // document.body.classList.remove('bg-black')\n    // document.body.classList.remove('bg-light')\n    document.body.classList.remove('bg-success')\n    document.body.classList.remove('bg-warning')\n    document.body.classList.remove('bg-danger')\n    document.body.classList.remove('bg-primary')\n  }\n\n  const toggleMode = (cls)=>{\n    removeBodyClasses();\n    console.log(cls)\n    document.body.classList.add('bg-'+cls)\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#001133';\n      showAlert(\"Dark mode has been enabled\" , \"success\");\n      document.title = \"Textme - DarkMode\";\n      // setInterval(() => {\n      //   document.title = 'Textutils is Amazing!!';\n      // }, 1500);\n      // setInterval(() => {\n      //   document.title = 'Install Textutils Noww!!';\n      // }, 2500);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\" , \"success\");\n      document.title = \"Textme - LightMode\";\n    }\n  }\n\n  return (\n    <>\n    <Router>\n      <Navbar title=\"Textme\" about=\"About us\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className='container my-3'>\n      <Routes>\n          <Route path=\"/about\" element={<About mode={mode}/>}></Route>\n          \n          <Route path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Try TextUtils - word counter, character counter, remove extra\" mode={mode}/>}></Route>\n          {/* <TextForm showAlert={showAlert} heading=\"Enter your text to analyze\" mode={mode}/> */}\n          \n             \n        </Routes>\n        </div>\n      </Router>\n      \n    </>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}