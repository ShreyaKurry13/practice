{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT APPS\\\\practice\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/Form';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#001133';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"Textme - DarkMode\";\n      // setInterval(() => {\n      //   document.title = 'Textutils is Amazing!!';\n      // }, 1500);\n      // setInterval(() => {\n      //   document.title = 'Install Textutils Noww!!';\n      // }, 2500);\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = \"Textme - LightMode\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"Textme\",\n      about: \"About us\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"BsEofASEGkdugI1UmHElaShuI3I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","React","useState","Alert","About","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title","children","about","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["D:/REACT APPS/practice/src/App.js"],"sourcesContent":["import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/Form';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport About from './components/About';\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert , setAlert] = useState(null);\n\n  const showAlert = (message , type) =>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#001133';\n      showAlert(\"Dark mode has been enabled\" , \"success\");\n      document.title = \"Textme - DarkMode\";\n      // setInterval(() => {\n      //   document.title = 'Textutils is Amazing!!';\n      // }, 1500);\n      // setInterval(() => {\n      //   document.title = 'Install Textutils Noww!!';\n      // }, 2500);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\" , \"success\");\n      document.title = \"Textme - LightMode\";\n    }\n  }\n\n  return (\n    <>\n      <Navbar title=\"Textme\" about=\"About us\" mode={mode} toggleMode={toggleMode}/>\n      \n      <Alert alert={alert}/>\n\n      <div className=\"container my-3\">\n          {/* <TextForm showAlert={showAlert} heading=\"Enter your text to analyze\" mode={mode}/> */}\n      </div>\n      <About/>\n      \n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACW,KAAK,EAAGC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEzC,MAAMa,SAAS,GAAGA,CAACC,OAAO,EAAGC,IAAI,KAAI;IACnCH,QAAQ,CAAC;MACPI,GAAG,EAACF,OAAO;MACXC,IAAI,EAACA;IACP,CAAC,CAAC;IACFE,UAAU,CAAC,MAAM;MACfL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMM,UAAU,GAAGA,CAAA,KAAI;IACrB,IAAGT,IAAI,KAAK,OAAO,EAAC;MAClBC,OAAO,CAAC,MAAM,CAAC;MACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CT,SAAS,CAAC,4BAA4B,EAAG,SAAS,CAAC;MACnDM,QAAQ,CAACI,KAAK,GAAG,mBAAmB;MACpC;MACA;MACA;MACA;MACA;MACA;IACF,CAAC,MACG;MACFb,OAAO,CAAC,OAAO,CAAC;MAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CT,SAAS,CAAC,6BAA6B,EAAG,SAAS,CAAC;MACpDM,QAAQ,CAACI,KAAK,GAAG,oBAAoB;IACvC;EACF,CAAC;EAED,oBACEnB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACEpB,OAAA,CAACP,MAAM;MAAC0B,KAAK,EAAC,QAAQ;MAACE,KAAK,EAAC,UAAU;MAAChB,IAAI,EAAEA,IAAK;MAACS,UAAU,EAAEA;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAE7EzB,OAAA,CAACH,KAAK;MAACU,KAAK,EAAEA;IAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAEtBzB,OAAA;MAAK0B,SAAS,EAAC;IAAgB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE1B,CAAC,eACNzB,OAAA,CAACF,KAAK;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eAER,CAAC;AAEP;AAACrB,EAAA,CAhDQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAkDZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}